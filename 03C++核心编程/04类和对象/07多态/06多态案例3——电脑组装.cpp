#include<iostream>
using namespace std;

//电脑组装

//抽象出不同零件类：1. 抽象CPU类；2. 抽象显卡类；3. 抽象内存条类
//1. 抽象CPU类
class CPU
{
public:
	//抽象的计算函数
	virtual void calculate() = 0;
};

//2. 抽象显卡类
class VedioCard
{
public:
	//抽象的显示函数
	virtual void display() = 0;
};

//3. 抽象内存条类
class Memory
{
public:
	//抽象的存储函数
	virtual void storage() = 0;
};

//电脑类
class Computer
{
public:
	Computer(CPU * cpu, VedioCard * vc, Memory * mem)
	{
		m_cpu = cpu;
		m_vc = vc;
		m_mem = mem;
	}

	//提供工作的函数
	void work()
	{
		//让零件工作起来，调用接口
		m_cpu->calculate();
		m_vc->display();
		m_mem->storage();
	}

	//提供析构函数，释放3个电脑零件
	~Computer()
	{
		//释放CPU零件
		if (m_cpu != NULL)
		{
			delete m_cpu;
			m_cpu = NULL;
		}
		//释放显卡零件
		if (m_vc != NULL)
		{
			delete m_vc;
			m_vc = NULL;
		}
		//释放内存条零件
		if (m_mem != NULL)
		{
			delete m_mem;
			m_mem = NULL;
		}
	}

private:
	CPU * m_cpu;  //CPU的零件指针
	VedioCard * m_vc;  //显卡的零件指针
	Memory * m_mem;  //内存条的零件指针
};

//具体厂商：1. Intel厂商；2. Lenovo厂商
//1. Intel厂商
class IntelCPU :public CPU  //CPU类
{
public:
	virtual void calculate()
	{
		cout << "Intel的CPU开始计算了！" << endl;
	}
};
class IntelVideoCard :public VedioCard  //显卡类
{
public:
	virtual void display()
	{
		cout << "Intel的显卡开始显示了！" << endl;
	}
};
class IntelMemory :public Memory  //内存条类
{
public:
	virtual void storage()
	{
		cout << "Intel的内存条开始存储了！" << endl;
	}
};

//2. Lenovo厂商
class LenovoCPU :public CPU  //CPU类
{
public:
	virtual void calculate()
	{
		cout << "Lenovo的CPU开始计算了！" << endl;
	}
};
class LenovoVideoCard :public VedioCard  //显卡类
{
public:
	virtual void display()
	{
		cout << "Lenovo的显卡开始显示了！" << endl;
	}
};
class LenovoMemory :public Memory  //内存条类
{
public:
	virtual void storage()
	{
		cout << "Lenovo的内存条开始存储了！" << endl;
	}
};

void test01()
{
	//第一台电脑的零件（在堆区创建的3个零件，在Computer类中使用析构函数释放）
	CPU * intelCpu = new IntelCPU;
	VedioCard * intelvedioCard = new IntelVideoCard;
	Memory * intelMemory = new IntelMemory;

	cout << "第一台电脑开始工作：" << endl;
	//创建第一台电脑
	Computer * computer1 = new Computer(intelCpu, intelvedioCard, intelMemory);
	computer1->work();
	delete computer1;

	cout << "---------------------------" << endl;

	cout << "第二台电脑开始工作：" << endl;
	//组装第二台电脑
	Computer * computer2 = new Computer(new LenovoCPU, new LenovoVideoCard, new LenovoMemory);
	computer2->work();
	delete computer2;

	cout << "---------------------------" << endl;

	cout << "第三台电脑开始工作：" << endl;
	//组装第三台电脑
	Computer * computer3 = new Computer(new LenovoCPU, new IntelVideoCard, new LenovoMemory);
	computer3->work();
	delete computer3;
}

int main()
{
	test01();

	system("pause");

	return 0;
}